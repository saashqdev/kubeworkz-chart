{{- if eq .Values.global.componentsEnable.audit "true" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit
  namespace: {{ template "kubeworkz.namespace" . }}
  labels:
    kubeworkz.io/app: audit
spec:
  replicas: {{ .Values.audit.replicas }}
  selector:
    matchLabels:
      kubeworkz.io/app: audit
  template:
    metadata:
      labels:
        kubeworkz.io/app: audit
        app: audit
    spec:
      {{- with .Values.audit.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.audit.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.audit.tolerations}}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: kubeworkz-audit
          image: "{{ .Values.global.hub.registry }}/{{ .Values.global.hub.project }}/{{ .Values.global.images.audit }}"
          imagePullPolicy: IfNotPresent
          resources:
          {{- toYaml .Values.audit.resources | nindent 12 }}
          ports:
            - containerPort: 8888
          env:
            - name: JWT_SECRET
              value: "56F0D8DB90241C6E"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8888
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
---
{{- end }}